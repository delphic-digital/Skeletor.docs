<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on The Skeletor Project</title>
    <link>https://delphic-digital.github.io/Skeletor.docs/overview/</link>
    <description>Recent content in Overview on The Skeletor Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 01 Jul 2016 13:35:22 +0000</lastBuildDate>
    <atom:link href="https://delphic-digital.github.io/Skeletor.docs/overview/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to Skeletor</title>
      <link>https://delphic-digital.github.io/Skeletor.docs/overview/introduction/</link>
      <pubDate>Fri, 01 Jul 2016 13:35:22 +0000</pubDate>
      
      <guid>https://delphic-digital.github.io/Skeletor.docs/overview/introduction/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Skeletor&lt;/em&gt; is a powerful framework designed as a starting point for front end development of projects. It was designed to give you a quick and organized way to start developing web sites with best practices and patterns in mind. It makes use of the latest and greatest web technology and performance.&lt;/p&gt;

&lt;p&gt;Skeletor tries to achieve a very minimalistic design to remain as flexible as possible. Everything included is very basic skeleton code to give you a headstart. There isn&amp;rsquo;t much templated code, but there are the tools and patterns in place to quickly prototype anything. This framework is meant for intermediate to advanced front end developers.&lt;/p&gt;

&lt;h3 id=&#34;what-s-included&#34;&gt;What&amp;rsquo;s included?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gulp&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Tasks for everything from compiling Sass to live browser reloading.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sass&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Folder stucture with predefined partials.&lt;/li&gt;
&lt;li&gt;Globbling to automatically include component partials.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Context aware component loading for on demand/aync loading&lt;/li&gt;
&lt;li&gt;RequireJS module loading for easy dependency management.&lt;/li&gt;
&lt;li&gt;Extensible JavaScript framework like Zurb&amp;rsquo;s Foundation or Twitter Bootstrap.&lt;/li&gt;
&lt;li&gt;Compatible component plugins.&lt;/li&gt;
&lt;li&gt;Bower for vendor package management.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h4&gt;

&lt;p&gt;This project and site gets updated as more best practices or discoveries are implemented.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>https://delphic-digital.github.io/Skeletor.docs/overview/setup/</link>
      <pubDate>Fri, 01 Jul 2016 13:35:22 +0000</pubDate>
      
      <guid>https://delphic-digital.github.io/Skeletor.docs/overview/setup/</guid>
      <description>

&lt;p&gt;Skeletor uses open source tools for its workflow. If you haven&amp;rsquo;t installed these requirements please do so.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Gulp &lt;code&gt;npm install --g gulp-cli&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install Bower &lt;code&gt;npm install -g bower&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installing&#34;&gt;Installing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fork/Clone/Download the &lt;a href=&#34;https://github.com/delphic-digital/Skeletor&#34;&gt;Skeletor&lt;/a&gt; repository into your machine.&lt;/li&gt;
&lt;li&gt;Open a terminal and install the Node.Js dependencies by running &lt;code&gt;npm install&lt;/code&gt; in your project directory.&lt;/li&gt;
&lt;li&gt;Install client side dependencies with bower by running &lt;code&gt;bower install&lt;/code&gt; in your project directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Several things happened happened when you can the commands. &lt;code&gt;npm&lt;/code&gt; installed all the nodejs dependencies needed for gulp to do its work. You only have to run this once. &lt;code&gt;bower&lt;/code&gt; installed client side dependencies.&lt;/p&gt;

&lt;h2 id=&#34;config&#34;&gt;Config&lt;/h2&gt;

&lt;p&gt;Before you get started, you will need to update some config options for gulp. Open the config file that is here:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;skeletor
|-- gulp
    |-- config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var localHostname = &#39;localhost.com&#39;, // Change to your local website that is running if you want to proxy it to browser-sync.
    siteShortname = &#39;skeletor&#39;, // Used for JavaScript optimaztion and should match your main.js namespace:  skeletor.main.js
    baseLayoutDir = &#39;./&#39;, // Where your index or base layout file is.
    baseLayoutFile = &#39;index.html&#39;, // The filename of your index or base layout. This is used to change the script included from src to dist.
    views = &#39;./*.html&#39;, // Where browser-sync should watch for HTML changes
    src = &#39;./Static/src&#39;, // Where the sass and js src are, probably don&#39;t need to change
    dist = &#39;./Static/dist&#39;, // Where everything gets compiled to, probably don&#39;t need to change
    assets = &#39;./Static/assets&#39; // Where fonts and images, and other static assets should go. Probably don&#39;t need to change.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;starting&#34;&gt;Starting&lt;/h2&gt;

&lt;p&gt;Run gulp to automatically open a new Skeletor project running on localhost:3000.&lt;/p&gt;

&lt;h2 id=&#34;file-structure&#34;&gt;File structure&lt;/h2&gt;

&lt;p&gt;Compiled and production-ready code can be found in the &lt;code&gt;dist&lt;/code&gt; directory. The &lt;code&gt;src&lt;/code&gt; directory contains development code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;skeletor
|-- Gulp
|   |-- # Lots of gulp stuff
|-- Static
|   |-- assets
|   |   |-- images
|   |   |   |-- # Your image files
|   |   |-- spritesheets
|   |       |-- # Your spritesheets get generated here
|   |-- dist
|   |   |-- css
|   |   |   |-- main.css # Your Sass gets compiled here
|   |   |-- js
|   |   |   |-- lib
|   |   |   |   |-- require.js
|   |-- src
|       |-- js
|       |   |-- skeletor.main.js
|       |   |-- components
|       |   |   |-- common.js
|       |   |   |-- common
|       |   |   |   |-- # Your common components here
|       |-- scss
|       |   |-- main.scss
|       |   |-- partials
|       |       |-- _settings.scss
|       |       |-- base
|       |       |   |-- _buttons.scss
|       |       |   |-- _fonts.scss
|       |       |   |-- _inputs.scss
|       |       |   |-- _scaffolding.scss
|       |       |   |-- _sprites.scss
|       |       |   |-- _svg.scss
|       |       |   |-- _typography.scss
|       |       |-- components
|       |       |   |-- # Your sites Sass components
|       |       |-- layout
|       |           |-- _footer.scss
|       |           |-- _forms.scss
|       |           |-- _header.scss
|       |           |-- _sidebar.scss
|       |-- sprites
|       |   |-- bitmap.example.handlebars
|       |   |-- inline.mustache
|       |   |-- vector.example.html
|       |   |-- bitmaps
|       |   |   |-- # Your bitmap (png/jpg) sprites
|       |   |-- inline
|       |   |   |-- # Your CSS sprites
|       |   |-- vectors
|       |       |-- # Your svg spritesheet sprites
|       |-- styleguide
|           |-- styleguide_overrides.css
|           |-- styleguide_variables.css
|-- .bowerrc
|-- .editorconfig
|-- .gitignore
|-- bower.json
|-- config.json
|-- gulpfile.js
|-- index.html
|-- package.json
|-- README.md

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>https://delphic-digital.github.io/Skeletor.docs/overview/usage/</link>
      <pubDate>Fri, 01 Jul 2016 13:35:22 +0000</pubDate>
      
      <guid>https://delphic-digital.github.io/Skeletor.docs/overview/usage/</guid>
      <description>

&lt;p&gt;Skeletor uses gulp as a task runner and several commands are available to use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# run Gulp in development mode (does not minify your JS for quicker response),
# start the server, open a new browser tab at localhost:3000 and start watching files.
# JS script include path is updated to src directory in base template.
# Sass is automatically compiled, and sprites are automatically generated.
$ gulp
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# run Gulp in production mode (runs your JS code through the requirejs optimizer),
# JS path is updated to dist directory in base template,
# will not start any server or watch.
$ gulp build
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;installing-components&#34;&gt;Installing components&lt;/h2&gt;

&lt;p&gt;Skeletor integrates with bower package management very nicely for vendor components. See &lt;a href=&#34;http://bower.io&#34;&gt;http://bower.io&lt;/a&gt; for more info.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# install a vendor component with bower
# main component files are automatically wired up to Skeletor
# js main is added to requirejs paths config.
# css/scss is added to main.scss
$ bower install &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is some automation that happens when you use bower. Please take care to understand these steps.
The files are determined by what&amp;rsquo;s declared as a &lt;strong&gt;main&lt;/strong&gt; file by the &lt;code&gt;bower.json&lt;/code&gt; spec.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript files are added to the requirejs paths config:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Automatically injected Bower JS dependencies via bowerRequireJS
require.config({
    paths: {
        &amp;quot;bower-example&amp;quot;: &amp;quot;../../../bower_components/bower-example&amp;quot;,
    },
    packages: [

    ],
    shim: {

    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;CSS/SASS files are added to the main.scss:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;// Automatically injected Bower CSS dependencies via wiredep (never manually edit this block)
// bower:css
@import &amp;quot;../../../bower_components/bower-example.css&amp;quot;;
// endbower

// Automatically injected Bower SCSS dependencies via wiredep (never manually edit this block)
// bower:scss
@import &amp;quot;../../../bower_components/bower-example.scss&amp;quot;;
// endbower
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If something goes wrong (correct files aren&amp;rsquo;t wired up), check the components bower.json file to make sure the &lt;code&gt;&amp;quot;main&amp;quot;: []&lt;/code&gt; is declared correctly. If not, you can add an override for your project&amp;rsquo;s &lt;code&gt;bower.json&lt;/code&gt; file. See &lt;a href=&#34;https://github.com/ck86/main-bower-files#overrides-options&#34;&gt;https://github.com/ck86/main-bower-files#overrides-options&lt;/a&gt; for how to do this.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>